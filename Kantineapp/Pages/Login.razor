@page "/login"
@inject ILoginRepository LoginRepository
@inject NavigationManager NavigationManager

<link href="css/login.css" rel="stylesheet" />
@layout MainLayout

<h3>Login</h3>
<div class="login-container">
    <form @onsubmit="HandleLogin">
        <div>
            <label for="username">Username:</label>
            <input type="text" id="username" @bind="Username" />
        </div>
        <div>
            <label for="password">Password:</label>
            <input type="password" id="password" @bind="Password" />
        </div>
        <button type="submit">Login</button>
        <p class="@((Message == "Login successful!") ? "success" : "")">@Message</p>
    </form>
</div>

@code {
    private string Username { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string Message { get; set; } = string.Empty;

    private async Task HandleLogin()
    {
        // Call the login repository to validate credentials
        var isAuthenticated = await LoginRepository.AuthenticateAsync(username: Username, password: Password);

        if (isAuthenticated)
        {
            Message = "Login successful!";
            await Task.Delay(millisecondsDelay: 1000);

            // Redirect to the home page
            NavigationManager.NavigateTo(uri: "/");
        }
        else
        {
            Message = "Invalid username or password.";
        }
    }

    private interface ILoginRepository
    {
        Task<bool> AuthenticateAsync(string username, string password);
    }

}